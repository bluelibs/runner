/**
 * Generated by runner-dev new resource user-entity
 * - Namespace: db
 * - File: src/db/resources/user-entity.resource.ts
 */
import { resource } from "@bluelibs/runner";
import {
  BaseEntity,
  Collection,
  defineEntity,
  EntitySchema,
} from "@mikro-orm/core";
import { Post } from "./post.entity";

export class User extends BaseEntity {
  id!: string;
  name!: string;
  email!: string;
  // Authentication fields (optional for existing seed users)
  passwordHash?: string;
  passwordSalt?: string;
  posts = new Collection<Post>(this);
}

export const userEntity = resource({
  id: "app.db.entities.resources.user",
  meta: {
    title: "User Entity Schema",
    description: "MikroORM entity schema for User with authentication fields and post relationships",
  },
  // tags: [],
  // dependencies: { /* other resources */ },
  init: async () =>
    new EntitySchema<User>({
      name: "User",
      class: User,
      tableName: "users",
      properties: {
        id: { type: "uuid", primary: true },
        name: { type: "string" },
        email: { type: "string" },
        passwordHash: { type: "string", nullable: true },
        passwordSalt: { type: "string", nullable: true },
        posts: {
          kind: "1:m",
          entity: () => "Post",
          mappedBy: (post) => post.author,
        },
      },
    }),
});
