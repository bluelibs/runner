/**
 * Generated by runner-dev new resource fastify
 * - Namespace: http
 * - File: src/http/resources/fastify.resource.ts
 */
import { r, globals } from "@bluelibs/runner";
import Fastify from "fastify";
import helmet from "@fastify/helmet";
import cors from "@fastify/cors";
import swagger from "@fastify/swagger";
import swaggerUi from "@fastify/swagger-ui";
import { createErrorHandler } from "./helpers/createErrorHandler";

export const fastify = r
  .resource("app.http.resources.fastify")
  .meta({
    title: "Fastify HTTP Server",
    description:
      "High-performance HTTP server instance for handling web requests and API endpoints",
  })
  .init(async () => {
    const fastify = Fastify();

    // Security & CORS
    await fastify.register(helmet);
    await fastify.register(cors, { origin: true, credentials: true });

    // OpenAPI (dev-friendly)
    await fastify.register(swagger, {
      openapi: {
        info: { title: "Fastify + Runner API", version: "0.1.0" },
      },
    });
    await fastify.register(swaggerUi, {
      routePrefix: "/swagger",
    });

    fastify.setErrorHandler(createErrorHandler());

    return fastify;
  })
  .dispose(async (fastify) => fastify.close())
  .build();
