/**
 * Generated by runner-dev new tag httpRoute
 * - Namespace: http
 * - File: src/http/tags/http-route.tag.ts
 */
import { r } from "@bluelibs/runner";

export interface HttpRouteConfig {
  // Optional config carried by the tag (available via extract())
  method: "get" | "post" | "put" | "delete" | "patch" | "options" | "head";
  path: string;
  // If set to 'merged', the router will pass { ...params, ...query, ...body } as task input
  // Defaults to 'body' for backward compatibility.
  inputFrom?: "body" | "merged";
  // Auth: public (default), optional (attach user if present), required (401 if missing)
  auth?: "public" | "optional" | "required";
}

export const httpRoute = r
  .tag("app.http.tags.http-route")
  .configSchema<HttpRouteConfig>({ parse: (x: any) => x })
  .meta({
    title: "HTTP Route Tag",
    description: "Tag for marking tasks as HTTP endpoints with method and path configuration",
  })
  .build();
